name: Send Daily Prompts (8am PT)

on:
  # Scheduled 8:00 AM Pacific (15:00 UTC in summer, 16:00 UTC in winter)
  schedule:
    - cron: "0 15 * 3-10 *"   # 08:00 PDT (March-October)
    - cron: "0 16 * 11,12,1,2 *"  # 08:00 PST (November-February)
  # Manual runs with optional inputs
  workflow_dispatch:
    inputs:
      to:
        description: "Send only to this E.164 phone (e.g., +13235550123)"
        required: false
        type: string
      force:
        description: "Bypass the one-send-per-day guard"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]
      prompt:
        description: "Override prompt text (optional)"
        required: false
        type: string

jobs:
  call-function:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
      group: daily-prompts
      cancel-in-progress: false
    steps:
      - name: Build URL with query params (for manual test mode)
        id: vars
        env:
          BASE:   ${{ secrets.SEND_DAILY_URL }}
          TO:     ${{ github.event.inputs.to }}
          FORCE:  ${{ github.event.inputs.force }}
          PROMPT: ${{ github.event.inputs.prompt }}
        run: |
          if [ -z "$BASE" ]; then
            echo "ERROR: SEND_DAILY_URL secret is not set"; exit 1
          fi
          url="$BASE"
          q=""
          if [ -n "$TO" ]; then
            # encode leading + as %2B
            enc_to="$(printf %s "$TO" | sed 's/+/%2B/g')"
            q="to=$enc_to"
          fi
          if [ "$FORCE" = "true" ]; then
            q="${q}${q:+&}force=true"
          fi
          if [ -n "$PROMPT" ]; then
            enc_prompt="$(printf %s "$PROMPT" | jq -sRr @uri)"
            q="${q}${q:+&}prompt=$enc_prompt"
          fi
          if [ -n "$q" ]; then url="${url}?${q}"; fi
          echo "url=$url" >> $GITHUB_OUTPUT
      - name: Call Supabase Edge Function
        run: |
          for i in 1 2 3; do
            http_code=$(curl -sS -o response.json -w "%{http_code}" -X POST "${{ steps.vars.outputs.url }}")
            echo "HTTP $http_code"
            cat response.json || true
            if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then exit 0; fi
            sleep 10
          done
          echo "Failed after 3 attempts"; exit 1